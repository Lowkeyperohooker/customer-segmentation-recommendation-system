{
  "kernels": [
    {
      "name": "python3",
      "type": "system",
      "description": "Default Python kernel using the system-installed Python environment.",
      "installation_steps": [
        "python -m pip install --upgrade pip",
        "python -m pip install jupyter ipykernel",
        "python -m ipykernel install --user --name=python3 --display-name 'Python 3'"
      ],
      "notes": "Ensure Python and pip are installed on your system.",
      "select_kernel_command": "Go to Kernel -> Change Kernel -> Select 'Python 3'."
    },
    {
      "name": "project_env",
      "type": "virtualenv",
      "description": "Project-specific Python virtual environment for dependency isolation.",
      "installation_steps": [
        "python -m venv project_env",
        {
          "linux_mac": "source project_env/bin/activate",
          "windows": "project_env\\Scripts\\activate"
        },
        "python -m pip install --upgrade pip",
        "python -m pip install jupyter ipykernel",
        "python -m ipykernel install --user --name=project_env --display-name 'Project Env'"
      ],
      "notes": "This kernel ensures dependencies are isolated for the project.",
      "select_kernel_command": "Go to Kernel -> Change Kernel -> Select 'Project Env'."
    },
    {
      "name": "conda_env",
      "type": "conda",
      "description": "Conda environment for users with Anaconda/Miniconda.",
      "installation_steps": [
        "conda create --name conda_env python=3.9 -y",
        "conda activate conda_env",
        "python -m pip install --upgrade pip",
        "python -m pip install jupyter ipykernel",
        "python -m ipykernel install --user --name=conda_env --display-name 'Conda Env'"
      ],
      "notes": "Requires Anaconda or Miniconda to be installed.",
      "select_kernel_command": "Go to Kernel -> Change Kernel -> Select 'Conda Env'."
    }
  ]
}
